# Generated by Django 3.1 on 2021-01-19 00:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import martor.models
import uuid
import webapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_pessoa_juridica', models.BooleanField(default=False)),
                ('cpf', models.CharField(max_length=14)),
                ('uf', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PE', 'Pernanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo'), ('TO', 'Tocantins')], max_length=2, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', webapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AvaliacaoCliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=48, verbose_name='Título')),
                ('texto', models.CharField(max_length=200)),
                ('pontuacao', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Pontuação (0-5)')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='Data de criação no banco de dados')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Avaliações dos produtos',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem_capa', models.FileField(null=True, upload_to='capas_artigos', verbose_name='Imagem de capa')),
                ('titulo', models.CharField(max_length=96, verbose_name='Título')),
                ('descricao', models.CharField(default='', max_length=200, verbose_name='Descrição do artigo (200 caracteres)')),
                ('conteudo', martor.models.MartorField()),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='Data de criação no banco de dados')),
            ],
            options={
                'verbose_name': 'Artigo do blog',
                'verbose_name_plural': 'Artigos do blog',
            },
        ),
        migrations.CreateModel(
            name='MensagemSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
                ('mensagem', models.CharField(max_length=200)),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='Data de criação no banco de dados')),
            ],
            options={
                'verbose_name_plural': 'Mensagens do site',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=128)),
                ('preco', models.FloatField(verbose_name='Preço')),
                ('qntd_estoque', models.PositiveIntegerField(default=0, verbose_name='Quantidade em estoque')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('medidas', models.CharField(blank=True, max_length=32, null=True)),
                ('foto', models.FileField(null=True, upload_to='imagens_produtos')),
                ('ativo', models.BooleanField(default=True, verbose_name='Mostrar no site')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='Data de criação no banco de dados')),
                ('avaliacoes', models.ManyToManyField(to='webapp.AvaliacaoCliente')),
            ],
            bases=(models.Model, webapp.models.BaseProduto),
        ),
        migrations.CreateModel(
            name='ProdutoKit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qntd', models.PositiveIntegerField(default=1)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.produto')),
            ],
            options={
                'verbose_name': 'Produto em kit',
                'verbose_name_plural': 'Produtos em kits',
            },
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=48)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrição')),
                ('foto', models.FileField(null=True, upload_to='imagens_kits')),
                ('ativo', models.BooleanField(default=True, verbose_name='Mostrar no site')),
                ('data_criacao', models.DateField(auto_now_add=True, verbose_name='Data de criação no banco de dados')),
                ('avaliacoes', models.ManyToManyField(to='webapp.AvaliacaoCliente')),
                ('itens', models.ManyToManyField(to='webapp.ProdutoKit')),
            ],
            bases=(models.Model, webapp.models.BaseProduto),
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qntd', models.PositiveIntegerField(default=1, verbose_name='Quantidade')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('kit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.kit')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.produto')),
            ],
            options={
                'verbose_name_plural': 'Ítens em carrinhos',
            },
        ),
    ]
